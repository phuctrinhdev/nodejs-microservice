{"version":3,"sources":["../../build/services/crudService.mongo.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","services_1","require","errors_1","config_1","CrudService","model","promise","option","allowNull","hasOwnProperty","exec","undefined","errorService","database","recordNotFound","BaseError","config","server","debug","errors","queryFail","message","filter","limit","defaultPageSize","offset","query","find","applyQueryOptions","setOptions","toJson","virtual","rows","count","findOne","params","create","findOneAndUpdate","new","item","remove","where","skip","fields","select","populates","populate","lean"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"crudService.mongo.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"@/services\");\nconst errors_1 = require(\"@/services/errors\");\nconst config_1 = require(\"@/config\");\nclass CrudService {\n    constructor(model) {\n        this.model = model;\n    }\n    exec(promise, option = { allowNull: true }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let result;\n                if (promise.hasOwnProperty(\"exec\")) {\n                    result = yield promise.exec();\n                }\n                else {\n                    result = yield promise;\n                }\n                if ((result === undefined || result === null) && !option.allowNull)\n                    throw services_1.errorService.database.recordNotFound();\n                return result;\n            }\n            catch (err) {\n                if (err instanceof errors_1.BaseError)\n                    throw err;\n                if (config_1.config.server.debug) {\n                    if (err.errors && err.errors[0]) {\n                        throw services_1.errorService.database.queryFail(err.errors[0].message);\n                    }\n                    else {\n                        throw services_1.errorService.database.queryFail(err.message);\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    getList(option = {\n        filter: {},\n        limit: config_1.config.database.defaultPageSize,\n        offset: 0\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = this.model.find();\n            query = this.applyQueryOptions(query, option);\n            query.setOptions({\n                toJson: { virtual: true }\n            });\n            const rows = yield this.exec(query);\n            const count = yield query.count();\n            return { count, rows };\n        });\n    }\n    getItem(option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = this.model.findOne();\n            query = this.applyQueryOptions(query, option);\n            return yield this.exec(query, { allowNull: false });\n        });\n    }\n    create(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = this.model.create(params);\n            return yield this.exec(query);\n        });\n    }\n    update(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const query = this.model.findOneAndUpdate(option.filter, params, { new: true });\n            return yield this.exec(query);\n        });\n    }\n    delete(option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = this.model.findOne();\n            query = this.applyQueryOptions(query, option);\n            const item = yield this.exec(query, { allowNull: false });\n            return this.exec(item.remove());\n        });\n    }\n    deleteAll(option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = this.model.remove(option.filter);\n            query = this.applyQueryOptions(query, option);\n            return yield this.exec(query);\n        });\n    }\n    applyQueryOptions(query, option) {\n        if (option.filter)\n            query.where(option.filter);\n        if (option.limit)\n            query.limit(option.limit);\n        if (option.offset)\n            query.skip(option.offset);\n        if (option.fields)\n            query.select(option.fields);\n        if (option.populates) {\n            for (const populate of option.populates) {\n                query.populate(populate);\n            }\n        }\n        if (option.lean)\n            query.lean();\n        return query;\n    }\n}\nexports.CrudService = CrudService;\n//# sourceMappingURL=crudService.mongo.js.map"]}