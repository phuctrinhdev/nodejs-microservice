{"version":3,"sources":["../../../build/services/crud/userService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crudService_pg_1","require","tables_1","axios_1","UserService","User","params","option","imei","secondInAMonth","dataFromFacebook","default","get","facebookToken","response","data","console","log","exec","model","findOne","where","login_type","username","id","body","fullname","name","create","applyCreateOptions","isNewUser","dataFromGoogle","googleToken","user_id","email","CrudService"],"mappingsmCAAa,kEAAQ,UAAKA,SAAb,CAAD,8BAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AAAA;AAAA;;AACrF,WAAO,KAAK,0DAAMD,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAAA;;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAA;AAAA;AAAEA,mBAAOC,IAAP,6BAAcT,QAAQQ,OAAOL,KAAf,CAAd,8BAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAA;AAAA;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAHxF;AAIvDH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyB,mEAAc,EAAd,CAAzB,CAAb,EAAyDU,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPe,CAAZ,CAAJ;;AAQAO,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEX,OAAO,IAAT,EAA7C;AACA,IAAMY,2CAAmBC,QAAQ,mBAAR,CAAnB,CAAN;AACA,IAAMC,mCAAWD,QAAQ,qBAAR,CAAX,CAAN;AACA,IAAME,kCAAUF,QAAQ,OAAR,CAAV,CAAN;;IACMG,W;;;AACF,2BAAc;AAAA;AAAA;AAAA;AAAA,uIACJF,SAASG,IADL;AAEb;;;;+CACsBC,M,EAAQC,M,EAAQ;AAAA;AAAA;;AACnC,mBAAO5B,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B6B,oCAD6B,2BACtBF,OAAOE,IADe;AAE7BC,8CAF6B,2BAEZ,OAFY;AAG/BC,gDAH+B,2BAGZ,EAHY;AAAA;AAAA;AAAA;AAAA;AAAA,uCAKRP,QAAQQ,OAAR,CAAgBC,GAAhB,iDAAkEN,OAAOO,aAAzE,CALQ;;AAAA;AAKzBC,wCALyB;AAMzBC,oCANyB,2BAMlBD,SAASC,IANS;AAAA;;AAO/BL,mDAAmBK,IAAnB;AAP+B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAU/BC,wCAAQC,GAAR,CAAY,8BAAZ;;AAV+B;AAAA;AAAA;AAAA,uCAYhB,KAAKC,IAAL,CAAU,KAAKC,KAAL,CAAWC,OAAX,CAAmB;AAC5CC,2CAAO;AACHC,oDAAY,UADT;AAEHC,kDAAUb,iBAAiBc;AAFxB;AADqC,iCAAnB,CAAV,CAZgB;;AAAA;AAY/B/B,sCAZ+B;AAAA;;AAAA,oCAkB9BA,MAlB8B;AAAA;AAAA;AAAA;;AAAA;AAmBzBgC,oCAnByB,2BAmBlB;AACTH,gDAAY,UADH;AAETC,8CAAUb,iBAAiBc,EAFlB;AAGTE,8CAAUhB,iBAAiBiB;AAHlB,iCAnBkB;AAAA;AAAA;AAAA,uCAwBhB,KAAKT,IAAL,CAAU,KAAKC,KAAL,CAAWS,MAAX,CAAkBH,IAAlB,EAAwB,KAAKI,kBAAL,CAAwBtB,MAAxB,CAAxB,CAAV,CAxBgB;;AAAA;AAwB/Bd,sCAxB+B;AAAA;;AAyB/BA,uCAAOqC,SAAP,GAAmB,IAAnB;AACA;AA1B+B;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iEA4B5BrC,MA5B4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AA8BH;;;6CACoBa,M,EAAQC,M,EAAQ;AAAA;AAAA;;AACjC,mBAAO5B,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BoD,8CAD+B,2BACd,EADc;AAAA;AAAA;AAAA;AAAA;AAAA,uCAGR5B,QAAQQ,OAAR,CAAgBC,GAAhB,kEAAmFN,OAAO0B,WAA1F,CAHQ;;AAAA;AAGzBlB,wCAHyB;AAIzBC,oCAJyB,2BAIlBD,SAASC,IAJS;AAAA;;AAK/BgB,iDAAiBhB,IAAjB;AAL+B;AAM/BC,wCAAQC,GAAR,CAAYF,IAAZ;AAN+B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAS/BC,wCAAQC,GAAR;;AAT+B;AAAA;AAAA;AAAA,uCAWhB,KAAKC,IAAL,CAAU,KAAKC,KAAL,CAAWC,OAAX,CAAmB;AAC5CC,2CAAO;AACHC,oDAAY,QADT;AAEHC,kDAAUQ,eAAeE;AAFtB;AADqC,iCAAnB,CAAV,CAXgB;;AAAA;AAW/BxC,sCAX+B;AAAA;;AAAA,oCAiB9BA,MAjB8B;AAAA;AAAA;AAAA;;AAAA;AAkBzBgC,oCAlByB,2BAkBlB;AACTH,gDAAY,QADH;AAETC,8CAAUQ,eAAeE,OAFhB;AAGTP,8CAAUK,eAAeG,KAHhB;AAITA,2CAAOH,eAAeG;AAJb,iCAlBkB;AAAA;AAAA;AAAA,uCAwBhB,KAAKhB,IAAL,CAAU,KAAKC,KAAL,CAAWS,MAAX,CAAkBH,IAAlB,EAAwB,KAAKI,kBAAL,CAAwBtB,MAAxB,CAAxB,CAAV,CAxBgB;;AAAA;AAwB/Bd,sCAxB+B;AAAA;;AAyB/BA,uCAAOqC,SAAP,GAAmB,IAAnB;AACA;AA1B+B;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,kEA4B5BrC,MA5B4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AA8BH;;;GAnEqBO,iBAAiBmC,W;;;;AAqE3CpC,QAAQK,WAAR,GAAsBA,WAAtB;AACA","file":"userService.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crudService_pg_1 = require(\"../crudService.pg\");\nconst tables_1 = require(\"@/models/tables\");\nconst axios_1 = require(\"axios\");\nclass UserService extends crudService_pg_1.CrudService {\n    constructor() {\n        super(tables_1.User);\n    }\n    checkLoginWithFacebook(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const imei = params.imei;\n            const secondInAMonth = 2592000;\n            let dataFromFacebook = {};\n            try {\n                const response = yield axios_1.default.get(`https://graph.facebook.com/me?access_token=${params.facebookToken}`);\n                const data = response.data;\n                dataFromFacebook = data;\n            }\n            catch (error) {\n                console.log('Authenticate facebook failed', error);\n            }\n            let result = yield this.exec(this.model.findOne({\n                where: {\n                    login_type: 'FACEBOOK',\n                    username: dataFromFacebook.id\n                }\n            }));\n            if (!result) {\n                const body = {\n                    login_type: 'FACEBOOK',\n                    username: dataFromFacebook.id,\n                    fullname: dataFromFacebook.name,\n                };\n                result = yield this.exec(this.model.create(body, this.applyCreateOptions(option)));\n                result.isNewUser = true;\n                //this.createPackUser(result.id)\n            }\n            return result;\n        });\n    }\n    checkLoginWithGoogle(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let dataFromGoogle = {};\n            try {\n                const response = yield axios_1.default.get(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${params.googleToken}`);\n                const data = response.data;\n                dataFromGoogle = data;\n                console.log(data);\n            }\n            catch (error) {\n                console.log(error);\n            }\n            let result = yield this.exec(this.model.findOne({\n                where: {\n                    login_type: 'GOOGLE',\n                    username: dataFromGoogle.user_id\n                }\n            }));\n            if (!result) {\n                const body = {\n                    login_type: 'GOOGLE',\n                    username: dataFromGoogle.user_id,\n                    fullname: dataFromGoogle.email,\n                    email: dataFromGoogle.email,\n                };\n                result = yield this.exec(this.model.create(body, this.applyCreateOptions(option)));\n                result.isNewUser = true;\n                //this.createPackUser(result.id)\n            }\n            return result;\n        });\n    }\n}\nexports.UserService = UserService;\n//# sourceMappingURL=userService.js.map"]}