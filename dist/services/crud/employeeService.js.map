{"version":3,"sources":["../../../build/services/crud/employeeService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crudService_pg_1","require","tables_1","services_1","EmployeeService","Employee","params","option","employee_id","filter","id","role","errorService","auth","permissionDeny","exec","model","findById","allowNull","item","username","undefined","database","queryFail","type","update","updatedItem","password","phone","count","where","resultUserName","resultPhone","lenghtPhone","length","lenghtUserName","create","applyCreateOptions","createdUser","duplicate","resultOfCheckUser","message","findOne","status","CrudService"],"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","file":"employeeService.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crudService_pg_1 = require(\"../crudService.pg\");\nconst tables_1 = require(\"@/models/tables\");\nconst services_1 = require(\"@/services\");\nclass EmployeeService extends crudService_pg_1.CrudService {\n    constructor() {\n        super(tables_1.Employee);\n    }\n    update(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (params.employee_id !== option.filter.id && params.role !== \"SUPERADMIN\") {\n                throw services_1.errorService.auth.permissionDeny();\n            }\n            const item = yield this.exec(this.model.findById(option.filter.id), { allowNull: false });\n            if (params.username != item.username && params.username != undefined) {\n                throw services_1.errorService.database.queryFail(\"Không được thay đổi Username\");\n            }\n            else {\n                if (params.role !== \"SUPERADMIN\") {\n                    params.type = item.type;\n                }\n                const updatedItem = yield this.exec(item.update(params));\n                updatedItem.password = undefined;\n                return updatedItem;\n            }\n        });\n    }\n    create(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (params.role !== \"SUPERADMIN\") {\n                throw services_1.errorService.auth.permissionDeny();\n            }\n            const username = params.username;\n            const phone = params.phone;\n            const resultUserName = yield this.model.count({\n                where: {\n                    username\n                }\n            });\n            const resultPhone = yield this.model.count({\n                where: {\n                    phone\n                }\n            });\n            const lenghtPhone = phone.length;\n            const lenghtUserName = username.length;\n            if (lenghtUserName <= 3) {\n                throw services_1.errorService.database.queryFail(\"Tài khoản phải có từ 4 ký tự trở lên\");\n            }\n            else if (lenghtPhone > 15 || lenghtPhone < 9) {\n                throw services_1.errorService.database.queryFail(\"Số điện thoại sai quy định\");\n            }\n            else if (resultUserName == 1) {\n                throw services_1.errorService.database.queryFail(username + \" đã tồn tại, vui lòng chọn username khác\");\n            }\n            else if (resultPhone == 1) {\n                throw services_1.errorService.database.queryFail(phone + \" đã tồn tại, vui lòng chọn số điện thoại khác khác\");\n            }\n            else {\n                const createdUser = yield this.exec(this.model.create(params, this.applyCreateOptions(option)));\n                return createdUser;\n            }\n        });\n    }\n    checkUsername(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.model.count({\n                where: { username: params.username }\n            });\n            if (result >= 1) {\n                const duplicate = true;\n                const resultOfCheckUser = params.username + \" đã tồn tại, vui lòng chọn username khác\";\n                return { duplicate, resultOfCheckUser };\n            }\n            else {\n                const resultOfCheckUser = \"Có thể sử dụng \" + params.username;\n                return { message: resultOfCheckUser };\n            }\n        });\n    }\n    checkLogin(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.exec(this.model.findOne({\n                where: {\n                    username: params.username,\n                    password: params.password\n                }\n            }));\n            if (result && result.status) {\n                result.password = undefined;\n                return result;\n            }\n            else {\n                throw services_1.errorService.database.queryFail(\"Hãy kiểm tra lại tài khoản và mật khẩu\");\n            }\n        });\n    }\n}\nexports.EmployeeService = EmployeeService;\n//# sourceMappingURL=employeeService.js.map"]}