{"version":3,"sources":["../../../build/services/crud/foodService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crudService_pg_1","require","tables_1","models_1","FoodService","Food","vivino_foods","product_id","sequelize","transaction","length","i","item","exec","model","findOne","where","name","vivino_id","id","food","data","create","FoodProduct","food_id","food_product","body","commit","rollback","CrudService"],"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","file":"foodService.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crudService_pg_1 = require(\"../crudService.pg\");\nconst tables_1 = require(\"@/models/tables\");\nconst models_1 = require(\"@/models\");\nclass FoodService extends crudService_pg_1.CrudService {\n    constructor() {\n        super(tables_1.Food);\n    }\n    checkIssetAndCreate(vivino_foods, product_id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transaction = yield models_1.sequelize.transaction();\n            try {\n                if (vivino_foods.length > 0) {\n                    for (let i = 0; i < vivino_foods.length; i++) {\n                        const item = vivino_foods[i];\n                        let food = yield this.exec(this.model.findOne({\n                            where: {\n                                name: item.name,\n                                vivino_id: item.id\n                            }\n                        }));\n                        if (!food) {\n                            const data = {\n                                name: item.name,\n                                vivino_id: item.id\n                            };\n                            food = yield this.exec(this.model.create(data));\n                        }\n                        let food_product = yield this.exec(tables_1.FoodProduct.findOne({\n                            where: {\n                                product_id: product_id,\n                                food_id: food.id\n                            }\n                        }));\n                        if (!food_product) {\n                            const body = {\n                                product_id: product_id,\n                                food_id: food.id\n                            };\n                            yield this.exec(tables_1.FoodProduct.create(body, { transaction }));\n                        }\n                    }\n                    transaction.commit();\n                }\n            }\n            catch (error) {\n                transaction.rollback();\n                throw error;\n            }\n        });\n    }\n}\nexports.FoodService = FoodService;\n//# sourceMappingURL=foodService.js.map"]}