{"version":3,"sources":["../../build/services/utilService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","Ajv","require","AjvError","AjvKeyWords","_","UtilService","schema","json","ajv","allErrors","jsonPointers","singleError","valid","validate","isValid","message","errorsText","params","info","regex","regex2","test","replaceText","match","item","replace","get","data","arr","encodeObject","join","keys","key","str","arrobj","element","push","arr1","arr2","split","arrElement","num"],"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","file":"utilService.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Ajv = require(\"ajv\");\nconst AjvError = require(\"ajv-errors\");\nconst AjvKeyWords = require(\"ajv-keywords\");\nconst _ = require(\"lodash\");\nclass UtilService {\n    validateJSON(schema, json = {}) {\n        const ajv = new Ajv({ allErrors: true, jsonPointers: true });\n        AjvError(ajv, { singleError: true });\n        AjvKeyWords(ajv, ['switch']);\n        const valid = ajv.validate(schema, json);\n        return {\n            isValid: valid,\n            message: ajv.errorsText()\n        };\n    }\n    parseMessengeWithInfo(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { message } = params;\n            const { info } = params;\n            const regex = /({|})/g;\n            const regex2 = /({{\\w+}})|({{\\w+(?:\\.\\w+)+)}}/g;\n            if (regex.test(message)) {\n                const replaceText = message.match(regex2);\n                for (let item of replaceText) {\n                    item = item.replace(regex, '');\n                    message = message.replace(item, _.get(info, item));\n                }\n                message = message.replace(regex, '');\n            }\n            return message;\n        });\n    }\n    encode(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const arr = this.encodeObject(data);\n            return arr.join(':');\n        });\n    }\n    encodeObject(data) {\n        const arr = [];\n        const keys = Object.keys(data);\n        for (const key of keys) {\n            let str;\n            let arrobj = [];\n            if (typeof (data[key]) == 'object') {\n                arrobj = this.encodeObject(data[key]);\n                for (const element of arrobj) {\n                    str = key + '.' + element;\n                    arr.push(str);\n                }\n            }\n            else {\n                str = key + '=' + data[key];\n                arr.push(str);\n            }\n        }\n        return arr;\n    }\n    decode(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const arr1 = [];\n            const arr2 = [];\n            const arr = data.split(':');\n            const arrElement = [];\n            for (let item of arr) {\n                if (/(\\.\\d\\.)/g.test(item)) {\n                    let num = item.match(/(\\.\\d\\.)/g).join();\n                    num = num.replace(/\\./g, '');\n                    item = item.replace(/(\\.\\d)/g, '[' + num + ']');\n                }\n                else if (/(\\.\\d)/g.test(item)) {\n                    let num = item.match(/(\\.\\d)/g).join();\n                    num = num.replace(/\\./g, '');\n                    item = item.replace(/(\\.\\d)/g, '[' + num + ']');\n                }\n                const element = item.split('=');\n                arr1.push(element[0]);\n                arr2.push(element[1]);\n            }\n            arrElement.push(arr1);\n            arrElement.push(arr2);\n            return arrElement;\n        });\n    }\n}\nexports.UtilService = UtilService;\n//# sourceMappingURL=utilService.js.map"]}