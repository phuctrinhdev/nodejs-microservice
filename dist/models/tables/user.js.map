{"version":3,"sources":["../../../build/models/tables/user.js"],"names":["Object","defineProperty","exports","value","base_1","require","moment","unix_timestamp_now","valueOf","User","sequelize","define","id","type","Sequelize","UUID","defaultValue","UUIDV1","primaryKey","username","STRING","fullname","avatar","phone","email","age","INTEGER","validate","min","allowNull","sex","isIn","locale","login_type","status","BOOLEAN","created_at_unix_timestamp","BIGINT","updated_at_unix_timestamp","created_at","literal","updated_at","deleted_at","hooks","beforeCreate","model","beforeUpdate","timestamps","underscored","freezeTableName","paranoid","defaultScope","attributes","exclude","scopes","deleted","where","$ne"],"mappings":"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","file":"user.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"../base\");\nconst moment = require(\"moment\");\nvar unix_timestamp_now = moment().valueOf();\nexports.User = base_1.sequelize.define('tbl_user', {\n    id: {\n        type: base_1.Sequelize.UUID,\n        defaultValue: base_1.Sequelize.UUIDV1,\n        primaryKey: true\n    },\n    username: {\n        type: base_1.Sequelize.STRING\n    },\n    fullname: {\n        type: base_1.Sequelize.STRING,\n    },\n    avatar: {\n        type: base_1.Sequelize.STRING,\n    },\n    phone: {\n        type: base_1.Sequelize.STRING,\n    },\n    email: {\n        type: base_1.Sequelize.STRING,\n    },\n    age: {\n        type: base_1.Sequelize.INTEGER,\n        validate: {\n            min: 0,\n        },\n        defaultValue: 0,\n        allowNull: false\n    },\n    sex: {\n        type: base_1.Sequelize.STRING,\n        validate: {\n            isIn: [\n                [\n                    'MALE',\n                    'FEMALE'\n                ]\n            ]\n        }\n    },\n    locale: {\n        type: base_1.Sequelize.STRING\n    },\n    login_type: {\n        type: base_1.Sequelize.STRING,\n        validate: {\n            isIn: [\n                [\n                    'FACEBOOK',\n                    'GOOGLE'\n                ]\n            ]\n        },\n        allowNull: false\n    },\n    status: {\n        type: base_1.Sequelize.BOOLEAN,\n        defaultValue: true,\n        allowNull: false\n    },\n    created_at_unix_timestamp: {\n        type: base_1.Sequelize.BIGINT,\n        validate: {\n            min: 0,\n        },\n        defaultValue: 0\n    },\n    updated_at_unix_timestamp: {\n        type: base_1.Sequelize.BIGINT,\n        validate: {\n            min: 0,\n        },\n        defaultValue: 0\n    },\n    created_at: {\n        type: 'TIMESTAMP',\n        defaultValue: base_1.Sequelize.literal('CURRENT_TIMESTAMP'),\n        allowNull: false\n    },\n    updated_at: {\n        type: 'TIMESTAMP',\n        defaultValue: base_1.Sequelize.literal('CURRENT_TIMESTAMP'),\n        allowNull: false\n    },\n    deleted_at: { type: 'TIMESTAMP' }\n}, {\n    hooks: {\n        beforeCreate: (model) => {\n            model.created_at_unix_timestamp = unix_timestamp_now;\n            model.updated_at_unix_timestamp = unix_timestamp_now;\n        },\n        beforeUpdate: (model) => {\n            model.updated_at_unix_timestamp = moment().valueOf();\n        },\n    },\n    timestamps: true,\n    underscored: true,\n    freezeTableName: true,\n    paranoid: true,\n    defaultScope: {\n        attributes: { exclude: ['deleted_at'] }\n    },\n    scopes: {\n        deleted: {\n            where: { deleted_at: { $ne: null } },\n            paranoid: false\n        }\n    }\n});\n//# sourceMappingURL=user.js.map"]}