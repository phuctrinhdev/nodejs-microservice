{"version":3,"sources":["../../build/models/base.pg.js"],"names":["Object","defineProperty","exports","value","config_1","require","Sequelize","option","undefined","process","env","NODE_ENV","host","config","database","sql","dialect","pool","max","min","idle","timezone","sequelize"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,mCAAWC,QAAQ,WAAR,CAAX,CAAN;AACA,IAAMC,oCAAYD,QAAQ,WAAR,CAAZ,CAAN;;AACAH,QAAQI,SAAR,GAAoBA,SAApB;AACA,IAAIC,iCAASC,SAAT,CAAJ;;AACA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAAA;AAAA;;AACvCJ,aAAS;AACLK,cAAMR,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,MAA7B,CADD;AAELC,iBAASZ,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,SAA7B,CAFJ;AAGL;AACAE,cAAM;AACFC,iBAAK,CADH;AAEFC,iBAAK,CAFH;AAGFC,kBAAM;AAHJ,SAJD;AASLC,kBAAU;AATL,KAAT;AAWH,CAZD,MAaK;AAAA;AAAA;;AACDd,aAAS;AACLK,cAAMR,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,MAA7B,CADD;AAELC,iBAASZ,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,SAA7B,CAFJ;AAGL;AACAE,cAAM;AACFC,iBAAK,CADH;AAEFC,iBAAK,CAFH;AAGFC,kBAAM;AAHJ,SAJD;AASLC,kBAAU,QATL;AAUL,0BAAkB;AACd,mBAAO;AACH,2BAAW;AADR;AADO;AAVb,KAAT;AAgBH;AACD,IAAMC,oCAAY,IAAIhB,SAAJ,CAAcF,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,UAA7B,CAAd,EAAwDX,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,UAA7B,CAAxD,EAAkGX,SAASS,MAAT,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,UAA7B,CAAlG,EAA4IR,MAA5I,CAAZ,CAAN;;AACAL,QAAQoB,SAAR,GAAoBA,SAApB;AACA","file":"base.pg.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"@/config\");\nconst Sequelize = require(\"sequelize\");\nexports.Sequelize = Sequelize;\nlet option = undefined;\nif (process.env.NODE_ENV === \"production\") {\n    option = {\n        host: config_1.config.database.sql['host'],\n        dialect: config_1.config.database.sql['dialect'],\n        // default setting\n        pool: {\n            max: 5,\n            min: 0,\n            idle: 10000\n        },\n        timezone: \"+07:00\",\n    };\n}\nelse {\n    option = {\n        host: config_1.config.database.sql['host'],\n        dialect: config_1.config.database.sql['dialect'],\n        // default setting\n        pool: {\n            max: 5,\n            min: 0,\n            idle: 10000\n        },\n        timezone: \"+07:00\",\n        \"dialectOptions\": {\n            \"ssl\": {\n                \"require\": true\n            }\n        }\n    };\n}\nconst sequelize = new Sequelize(config_1.config.database.sql['database'], config_1.config.database.sql['username'], config_1.config.database.sql['password'], option);\nexports.sequelize = sequelize;\n//# sourceMappingURL=base.pg.js.map"]}