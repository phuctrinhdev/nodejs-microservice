{"version":3,"sources":["../build/server.js"],"names":["Object","defineProperty","exports","value","cluster","require","cpuCount","webWorkers","jobWorkers","isMaster","i","addWebWorker","on","worker","code","signal","indexOf","id","console","log","process","pid","removeWebWorker","toString","env","web","push","fork","addJobWorker","job","splice","removeJobWorker"],"mappingscAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,kCAAUC,QAAQ,SAAR,CAAV,CAAN;AACA,IAAMC,mCAAW,CAAX,CAAN,C,CAAoB;AACpB,IAAMC,qCAAa,EAAb,CAAN;AACA,IAAMC,qCAAa,EAAb,CAAN;;AACA,IAAIJ,QAAQK,QAAZ,EAAsB;AAAA;AAAA;;AAClB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,QAApB,EAA8BI,KAAK,CAAnC,EAAsC;AAAA;;AAClC;AACAC;AACH;AALiB;AAMlBP,YAAQQ,EAAR,CAAW,MAAX,EAAmB,UAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAA0B;AAAA;AAAA;;AACzC;AACA;AACA;AACA;AACA;AACA,YAAIR,WAAWS,OAAX,CAAmBH,OAAOI,EAA1B,KAAiC,CAAC,CAAtC,EAAyC;AAAA;AAAA;;AACrCC,oBAAQC,GAAR,CAAY,iBAAiBN,OAAOO,OAAP,CAAeC,GAAhC,GAAsC,6BAAlD;AADqC;AAErCC,4BAAgBT,OAAOI,EAAP,CAAUM,QAAV,EAAhB;AAFqC;AAGrCZ;AACH,SAJD;AAAA;AAAA;AAKH,KAXD;AAYH,CAlBD,MAmBK;AAAA;AAAA;;AACD;AACA;AACA;AACA;AACA,QAAIS,QAAQI,GAAR,CAAYC,GAAhB,EAAqB;AAAA;AAAA;;AACjBP,gBAAQC,GAAR,CAAY,wBAAwBf,QAAQS,MAAR,CAAeI,EAAnD;AADiB;AAEjBZ,gBAAQ,SAAR,EAFiB,CAEG;AACvB,KAHD;AAAA;AAAA;AAIH;AACD,SAASM,YAAT,GAAwB;AAAA;AAAA;;AACpBJ,eAAWmB,IAAX,CAAgBtB,QAAQuB,IAAR,CAAa,EAAEF,KAAK,CAAP,EAAb,EAAyBR,EAAzC;AACH;AACD,SAASW,YAAT,GAAwB;AAAA;AAAA;;AACpBpB,eAAWkB,IAAX,CAAgBtB,QAAQuB,IAAR,CAAa,EAAEE,KAAK,CAAP,EAAb,EAAyBZ,EAAzC;AACH;AACD,SAASK,eAAT,CAAyBL,EAAzB,EAA6B;AAAA;AAAA;;AACzBV,eAAWuB,MAAX,CAAkBvB,WAAWS,OAAX,CAAmBC,EAAnB,CAAlB,EAA0C,CAA1C;AACH;AACD,SAASc,eAAT,CAAyBd,EAAzB,EAA6B;AAAA;AAAA;;AACzBT,eAAWsB,MAAX,CAAkBtB,WAAWQ,OAAX,CAAmBC,EAAnB,CAAlB,EAA0C,CAA1C;AACH;AACD","file":"server.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cluster = require(\"cluster\");\nconst cpuCount = 4; // os.cpus().length\nconst webWorkers = [];\nconst jobWorkers = [];\nif (cluster.isMaster) {\n    // Create a worker for each CPU\n    for (let i = 0; i < cpuCount; i += 1) {\n        // addJobWorker();\n        addWebWorker();\n    }\n    cluster.on('exit', (worker, code, signal) => {\n        // if (jobWorkers.indexOf(worker.id) != -1) {\n        //     console.log('job worker ' + worker.process.pid + ' died. Trying to respawn...');\n        //     removeJobWorker(worker.id);\n        //     addJobWorker();\n        // }\n        if (webWorkers.indexOf(worker.id) != -1) {\n            console.log('http worker ' + worker.process.pid + ' died. Trying to respawn...');\n            removeWebWorker(worker.id.toString());\n            addWebWorker();\n        }\n    });\n}\nelse {\n    // if (process.env.job) {\n    //     console.log('start job server: ' + cluster.worker.id);\n    //     require('./worker');//initialize the agenda here\n    // }\n    if (process.env.web) {\n        console.log('start http server: ' + cluster.worker.id);\n        require('./index'); // initialize the http server here\n    }\n}\nfunction addWebWorker() {\n    webWorkers.push(cluster.fork({ web: 1 }).id);\n}\nfunction addJobWorker() {\n    jobWorkers.push(cluster.fork({ job: 1 }).id);\n}\nfunction removeWebWorker(id) {\n    webWorkers.splice(webWorkers.indexOf(id), 1);\n}\nfunction removeJobWorker(id) {\n    jobWorkers.splice(jobWorkers.indexOf(id), 1);\n}\n//# sourceMappingURL=server.js.map"]}