{"version":3,"sources":["../../build/routers/crud.pg.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","express","require","_","base_1","middlewares_1","CrudRouter","controller","router","Router","customRouting","defaultRouting","get","getListMiddlewares","route","getList","getItemMiddlewares","getItem","post","createMiddlewares","create","put","updateMiddlewares","update","delete","deleteMiddlewares","deleteAllMiddlewares","deleteAll","authInfoMiddleware","run","queryMiddleware","req","res","queryInfo","onSuccessAsList","undefined","params","id","filter","onSuccess","body","has","query","items","parse","validateJSON","type","properties","uniqueItems","minItems","required","additionalProperties","$in","BaseRouter"],"mappingsoCAAa,oEAAQ,UAAKA,SAAb,CAAD,+BAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AAAA;AAAA;;AACrF,WAAO,KAAK,4DAAMD,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAAA;;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAA;AAAA;AAAEA,mBAAOC,IAAP,8BAAcT,QAAQQ,OAAOL,KAAf,CAAd,+BAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAA;AAAA;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAHxF;AAIvDH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyB,qEAAc,EAAd,CAAzB,CAAb,EAAyDU,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPe,CAAZ,CAAJ;;AAQAO,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEX,OAAO,IAAT,EAA7C;AACA,IAAMY,mCAAUC,QAAQ,SAAR,CAAV,CAAN;AACA,IAAMC,6BAAID,QAAQ,QAAR,CAAJ,CAAN;AACA,IAAME,kCAASF,QAAQ,QAAR,CAAT,CAAN;AACA,IAAMG,yCAAgBH,QAAQ,gBAAR,CAAhB,CAAN;;IACMI,U;;;AACF,wBAAYC,UAAZ,EAAwB;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAEpB,cAAKA,UAAL,GAAkBA,UAAlB;AAFoB;AAGpB,cAAKC,MAAL,GAAcP,QAAQQ,MAAR,EAAd;AAHoB;AAIpB,cAAKC,aAAL;AAJoB;AAKpB,cAAKC,cAAL;AALoB;AAMvB;;;;yCACgB;AAAA;AAAA;;AACb,iBAAKH,MAAL,CAAYI,GAAZ,CAAgB,GAAhB,EAAqB,KAAKC,kBAAL,EAArB,EAAgD,KAAKC,KAAL,CAAW,KAAKC,OAAhB,CAAhD;AADa;AAEb,iBAAKP,MAAL,CAAYI,GAAZ,CAAgB,MAAhB,EAAwB,KAAKI,kBAAL,EAAxB,EAAmD,KAAKF,KAAL,CAAW,KAAKG,OAAhB,CAAnD;AAFa;AAGb,iBAAKT,MAAL,CAAYU,IAAZ,CAAiB,GAAjB,EAAsB,KAAKC,iBAAL,EAAtB,EAAgD,KAAKL,KAAL,CAAW,KAAKM,MAAhB,CAAhD;AAHa;AAIb,iBAAKZ,MAAL,CAAYa,GAAZ,CAAgB,MAAhB,EAAwB,KAAKC,iBAAL,EAAxB,EAAkD,KAAKR,KAAL,CAAW,KAAKS,MAAhB,CAAlD;AAJa;AAKb,iBAAKf,MAAL,CAAYgB,MAAZ,CAAmB,MAAnB,EAA2B,KAAKC,iBAAL,EAA3B,EAAqD,KAAKX,KAAL,CAAW,KAAKU,MAAhB,CAArD;AALa;AAMb,iBAAKhB,MAAL,CAAYgB,MAAZ,CAAmB,GAAnB,EAAwB,KAAKE,oBAAL,EAAxB,EAAqD,KAAKZ,KAAL,CAAW,KAAKa,SAAhB,CAArD;AACH;;;wCACe;AAAA;AACf;;;8CACqB;AAAA;AAAA;;AAClB,mBAAO,CACHtB,cAAcuB,kBAAd,CAAiCC,GAAjC,EADG,CAAP;AAGH;;;6CACoB;AAAA;AAAA;;AACjB,mBAAO,CACHxB,cAAcyB,eAAd,CAA8BD,GAA9B,EADG,CAAP;AAGH;;;gCACOE,G,EAAKC,G,EAAK;AAAA;AAAA;;AACd,mBAAOpD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACd,KAAK2B,UAAL,CAAgBQ,OAAhB,CAAwBgB,IAAIE,SAA5B,CADc;;AAAA;AAC7BvC,sCAD6B;AAAA;;AAEnC,qCAAKwC,eAAL,CAAqBF,GAArB,EAA0BtC,MAA1B,EAAkCyC,SAAlC,EAA6CJ,IAAIE,SAAjD;;AAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAIH;;;6CACoB;AAAA;AAAA;;AACjB,mBAAO,CACH5B,cAAcyB,eAAd,CAA8BD,GAA9B,EADG,CAAP;AAGH;;;gCACOE,G,EAAKC,G,EAAK;AAAA;AAAA;;AACd,mBAAOpD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACpBmD,IAAIK,MADgB,GAC3BC,EAD2B,SAC3BA,EAD2B;AAAA;;AAEnCN,oCAAIE,SAAJ,CAAcK,MAAd,CAAqBD,EAArB,GAA0BA,EAA1B;AAFmC;AAAA;AAAA,uCAGd,KAAK9B,UAAL,CAAgBU,OAAhB,CAAwBc,IAAIE,SAA5B,CAHc;;AAAA;AAG7BvC,sCAH6B;AAAA;;AAInC,qCAAK6C,SAAL,CAAeP,GAAf,EAAoBtC,MAApB;;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAMH;;;4CACmB;AAAA;AAAA;;AAChB,mBAAO,CACHW,cAAcuB,kBAAd,CAAiCC,GAAjC,EADG,CAAP;AAGH;;;+BACME,G,EAAKC,G,EAAK;AAAA;AAAA;;AACb,mBAAOpD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACd,KAAK2B,UAAL,CAAgBa,MAAhB,CAAuBW,IAAIS,IAA3B,CADc;;AAAA;AAC7B9C,sCAD6B;AAAA;;AAEnC,qCAAK6C,SAAL,CAAeP,GAAf,EAAoBtC,MAApB;;AAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAIH;;;4CACmB;AAAA;AAAA;;AAChB,mBAAO,CACHW,cAAcuB,kBAAd,CAAiCC,GAAjC,EADG,CAAP;AAGH;;;+BACME,G,EAAKC,G,EAAK;AAAA;AAAA;;AACb,mBAAOpD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACpBmD,IAAIK,MADgB,GAC3BC,EAD2B,SAC3BA,EAD2B;AAAA;AAAA;AAAA,uCAEd,KAAK9B,UAAL,CAAgBgB,MAAhB,CAAuBQ,IAAIS,IAA3B,EAAiC;AAClDF,4CAAQ,EAAED,MAAF;AAD0C,iCAAjC,CAFc;;AAAA;AAE7B3C,sCAF6B;AAAA;;AAKnC,qCAAK6C,SAAL,CAAeP,GAAf,EAAoBtC,MAApB;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAOH;;;4CACmB;AAAA;AAAA;;AAChB,mBAAO,CACHW,cAAcuB,kBAAd,CAAiCC,GAAjC,EADG,CAAP;AAGH;;;gCACME,G,EAAKC,G,EAAK;AAAA;AAAA;;AACb,mBAAOpD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACpBmD,IAAIK,MADgB,GAC3BC,EAD2B,SAC3BA,EAD2B;AAAA;AAAA;AAAA,uCAEd,KAAK9B,UAAL,CAAgBiB,MAAhB,CAAuB;AACxCc,4CAAQ,EAAED,MAAF;AADgC,iCAAvB,CAFc;;AAAA;AAE7B3C,sCAF6B;AAAA;;AAKnC,qCAAK6C,SAAL,CAAeP,GAAf,EAAoBtC,MAApB;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAOH;;;+CACsB;AAAA;AAAA;;AACnB,mBAAO,CACHW,cAAcuB,kBAAd,CAAiCC,GAAjC,EADG,CAAP;AAGH;;;kCACSE,G,EAAKC,G,EAAK;AAAA;AAAA;;AAChB,mBAAOpD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACnC,oCAAIuB,EAAEsC,GAAF,CAAMV,IAAIW,KAAV,EAAiB,OAAjB,CAAJ,EAA+B;AAAA;AAAA;;AAC3BX,wCAAIW,KAAJ,CAAUC,KAAV,GAAkB,gCAAKC,KAAL,CAAWb,IAAIW,KAAJ,CAAUC,KAArB,iCAA+B,EAA/B,CAAlB;AACH,iCAFD;AAAA;AAAA;AADmC;AAAA;AAAA,uCAI7B,KAAKE,YAAL,CAAkBd,IAAIW,KAAtB,EAA6B;AAC/BI,0CAAM,QADyB;AAE/BC,gDAAY;AACRJ,+CAAO;AACHG,kDAAM,OADH;AAEHE,yDAAa,IAFV;AAGHC,sDAAU,CAHP;AAIHN,mDAAO,EAAEG,MAAM,QAAR;AAJJ;AADC,qCAFmB;AAU/BI,8CAAU,CAAC,OAAD,CAVqB;AAW/BC,0DAAsB;AAXS,iCAA7B,CAJ6B;;AAAA;AAAA,iEAiBjBpB,IAAIW,KAjBa,GAiB3BC,KAjB2B,SAiB3BA,KAjB2B;AAAA;AAAA;AAAA,uCAkBd,KAAKpC,UAAL,CAAgBoB,SAAhB,CAA0B;AAC3CW,4CAAQ,EAAED,IAAI,EAAEe,KAAKT,KAAP,EAAN;AADmC,iCAA1B,CAlBc;;AAAA;AAkB7BjD,sCAlB6B;AAAA;;AAqBnC,qCAAK6C,SAAL,CAAeP,GAAf,EAAoBtC,MAApB;;AArBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAuBH;;;GAnHoBU,OAAOiD,U;;;;AAqHhCrD,QAAQM,UAAR,GAAqBA,UAArB;AACA","file":"crud.pg.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst express = require(\"express\");\nconst _ = require(\"lodash\");\nconst base_1 = require(\"./base\");\nconst middlewares_1 = require(\"@/middlewares\");\nclass CrudRouter extends base_1.BaseRouter {\n    constructor(controller) {\n        super();\n        this.controller = controller;\n        this.router = express.Router();\n        this.customRouting();\n        this.defaultRouting();\n    }\n    defaultRouting() {\n        this.router.get('/', this.getListMiddlewares(), this.route(this.getList));\n        this.router.get('/:id', this.getItemMiddlewares(), this.route(this.getItem));\n        this.router.post('/', this.createMiddlewares(), this.route(this.create));\n        this.router.put('/:id', this.updateMiddlewares(), this.route(this.update));\n        this.router.delete('/:id', this.deleteMiddlewares(), this.route(this.delete));\n        this.router.delete('/', this.deleteAllMiddlewares(), this.route(this.deleteAll));\n    }\n    customRouting() {\n    }\n    checkGetMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    getListMiddlewares() {\n        return [\n            middlewares_1.queryMiddleware.run()\n        ];\n    }\n    getList(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.controller.getList(req.queryInfo);\n            this.onSuccessAsList(res, result, undefined, req.queryInfo);\n        });\n    }\n    getItemMiddlewares() {\n        return [\n            middlewares_1.queryMiddleware.run()\n        ];\n    }\n    getItem(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            req.queryInfo.filter.id = id;\n            const result = yield this.controller.getItem(req.queryInfo);\n            this.onSuccess(res, result);\n        });\n    }\n    createMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    create(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.controller.create(req.body);\n            this.onSuccess(res, result);\n        });\n    }\n    updateMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    update(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            const result = yield this.controller.update(req.body, {\n                filter: { id }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n    deleteMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    delete(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            const result = yield this.controller.delete({\n                filter: { id }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n    deleteAllMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    deleteAll(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (_.has(req.query, \"items\")) {\n                req.query.items = JSON.parse(req.query.items) || {};\n            }\n            yield this.validateJSON(req.query, {\n                type: \"object\",\n                properties: {\n                    items: {\n                        type: 'array',\n                        uniqueItems: true,\n                        minItems: 1,\n                        items: { type: \"string\" }\n                    }\n                },\n                required: ['items'],\n                additionalProperties: false\n            });\n            const { items } = req.query;\n            const result = yield this.controller.deleteAll({\n                filter: { id: { $in: items } }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n}\nexports.CrudRouter = CrudRouter;\n//# sourceMappingURL=crud.pg.js.map"]}