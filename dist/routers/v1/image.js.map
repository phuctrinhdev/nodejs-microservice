{"version":3,"sources":["../../../build/routers/v1/image.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","base_1","require","middlewares_1","multer","sharp","probe","fs","express","config_1","IMAGE_URL_SERVER_FOR_PRODUCTION","config","server","host","TYPE_IMAGE","FILE_IMAGE_PATH","KEY_CLOUDIMAGE","ImageRouter","router","Router","storage","diskStorage","destination","req","file","cb","filename","fieldname","Date","now","upload","get","route","getImage","cloudimg","post","updateImageMiddlewares","single","updateAvatar","res","fileUrl","console","log","resizeImage","path","url","tokenInfo","payload","user_id","undefined","body","file_url","onSuccess","originalFilePath","newFilePath","input","createReadStream","maxSize","newWidth","newHeight","width","height","Math","round","resize","toFile","err","error","destroy","params","operation","size","filter","imageUrl","UrlImage","redirect","exists","readFile","data","writeHead","write","end","authInfoMiddleware","run","queryMiddleware","blockMiddleware","BaseRouter","default"],"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","file":"image.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"../base\");\nconst middlewares_1 = require(\"@/middlewares\");\nconst multer = require(\"multer\");\nconst sharp = require('sharp');\nconst probe = require('probe-image-size');\nconst fs = require(\"fs\");\nconst express = require(\"express\");\nconst config_1 = require(\"@/config\");\n// const IMAGE_URL_SERVER = `${config.server.protocol}://${config.server.host}:${config.server.port}` + '/api/v1/image/get/'\nconst IMAGE_URL_SERVER_FOR_PRODUCTION = `https://${config_1.config.server.host}:8002` + '/api/v1/image/get/';\nconst TYPE_IMAGE = '.png';\nconst FILE_IMAGE_PATH = 'image/';\nconst KEY_CLOUDIMAGE = 'ce8391bac';\nclass ImageRouter extends base_1.BaseRouter {\n    constructor() {\n        super();\n        this.router = express.Router();\n        const storage = multer.diskStorage({\n            destination: function (req, file, cb) {\n                cb(null, FILE_IMAGE_PATH);\n            },\n            filename: function (req, file, cb) {\n                cb(null, file.fieldname + '-' + Date.now() + TYPE_IMAGE);\n            }\n        });\n        const upload = multer({ storage: storage });\n        this.router.get('/get/:filename', this.route(this.getImage));\n        this.router.get('/cloudimg/:operation/:size/:filter/:filename', this.route(this.cloudimg));\n        this.router.post('/upload', this.updateImageMiddlewares(), upload.single(\"image\"), this.route(this.updateAvatar));\n    }\n    updateAvatar(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fileUrl = IMAGE_URL_SERVER_FOR_PRODUCTION;\n            console.log('bambi start resize image');\n            const filename = 'resized-' + req.file.filename;\n            yield this.resizeImage(req.file.path, FILE_IMAGE_PATH + filename);\n            const url = fileUrl + filename;\n            if (req.tokenInfo.payload.user_id !== undefined) {\n                req.body.user_id = req.tokenInfo.payload.user_id;\n                req.body.file_url = url;\n            }\n            this.onSuccess(res, { url, filename });\n        });\n    }\n    resizeImage(originalFilePath, newFilePath) {\n        return new Promise((resolve, reject) => {\n            const input = require('fs').createReadStream(originalFilePath);\n            probe(input).then((result) => {\n                console.log('bambi tui check option cua image ne', result);\n                const maxSize = 400;\n                let newWidth = maxSize;\n                let newHeight = maxSize;\n                if (result.width > result.height) {\n                    if (result.width < newWidth) {\n                        newWidth = result.width;\n                    }\n                    newHeight = Math.round(newWidth * result.height / result.width);\n                }\n                else {\n                    if (result.height < newHeight) {\n                        newHeight = result.width;\n                    }\n                    newWidth = Math.round(newHeight * result.width / result.height);\n                }\n                sharp(originalFilePath).resize(newWidth, newHeight).toFile(newFilePath, (err) => {\n                    if (err) {\n                        console.error('resize image failed', err);\n                    }\n                    console.error('resize image successfully');\n                    resolve();\n                });\n                // terminate input, depends on stream type,\n                // this example is for fs streams only.\n                input.destroy();\n            });\n        });\n    }\n    cloudimg(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { operation, size, filter, filename } = req.params;\n            const imageUrl = IMAGE_URL_SERVER_FOR_PRODUCTION;\n            const UrlImage = \"https://\" + KEY_CLOUDIMAGE + \".cloudimg.io/\" + operation + \"/\" + size + \"/\" + filter + \"/\" + imageUrl + filename;\n            res.redirect(UrlImage);\n        });\n    }\n    getImage(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { filename } = req.params;\n            // console.log('!!! about to check file exist');\n            fs.exists(FILE_IMAGE_PATH + filename, function (exists) {\n                // console.log('!!! did check file exist', exists);\n                if (exists) {\n                    fs.readFile(FILE_IMAGE_PATH + filename, function (err, data) {\n                        if (err) {\n                            console.log('!!! error reading file');\n                            res.writeHead(500, { 'Content-Type': 'application/json' });\n                            res.write(`{\n                            \"code\": 500,\n                            \"type\": \"database_exception_query_fail\",\n                            \"message\": \"Image does not exist\"\n                        }`);\n                            res.end();\n                        }\n                        else {\n                            // console.log('!!! read a file successfully');\n                            res.writeHead(200, { 'Content-Type': 'image/png' });\n                            res.end(data);\n                        }\n                    });\n                }\n                else {\n                    res.writeHead(500, { 'Content-Type': 'application/json' });\n                    res.write(`{\n                    \"code\": 500,\n                    \"type\": \"database_exception_query_fail\",\n                    \"message\": \"Image does not exist\"\n                }`);\n                    res.end();\n                }\n            });\n        });\n    }\n    updateImageMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    getListMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    getItemMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    updateMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    deleteMiddlewares() {\n        // return [blockMiddleware.run()]\n        return [];\n    }\n    deleteAllMiddlewares() {\n        return [middlewares_1.blockMiddleware.run()];\n    }\n    createMiddlewares() {\n        return [middlewares_1.blockMiddleware.run()];\n    }\n}\nexports.default = ImageRouter;\n//# sourceMappingURL=image.js.map"]}