{"version":3,"sources":["../../../build/routers/v1/auth.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","services_1","require","express","base_1","controllers_1","nodemailer","AuthRouter","router","Router","post","route","employeeLogin","loginWithFacebook","loginWithGoogle","req","res","userController","checkLoginWithFacebook","body","dataObtained","dataValues","role","tokenService","getUserToken","id","token","onSuccess","isNewUser","checkLoginWithGoogle","employeeController","checkLogin","getEmployeeToken","BaseRouter","default"],"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","file":"auth.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"@/services\");\nconst express = require(\"express\");\nconst base_1 = require(\"../base\");\nconst controllers_1 = require(\"@/controllers\");\nconst nodemailer = require('nodemailer');\n// const URL_PAGE = \"https://telepro-forgot-password.firebaseapp.com/change-password.html?token=\"\nclass AuthRouter extends base_1.BaseRouter {\n    constructor() {\n        super();\n        this.router = express.Router();\n        // this.router.post('/login', this.route(this.login))\n        // this.router.post('/register/', this.route(this.registerUser));\n        this.router.post('/employee_login', this.route(this.employeeLogin));\n        // this.router.post('/login_with_phone_number', this.route(this.loginWithPhoneNumber))\n        // this.router.post('/login_with_facebook', this.route(this.loginWithFacebook))\n        // this.router.post('/login_with_facebook_account_kit', this.route(this.checkLoginWithFacebookAccountKit))\n        // this.router.post('/login_with_google', this.route(this.loginWithGoogle))\n        // this.router.post('/forget_password', this.route(this.forgetPassword))\n        // this.router.post('/get_password', this.route(this.getPassword))\n        // this.router.post('/reset_password', this.route(this.resetPassword))\n        // this.router.post('/register_with_phone_number/', this.route(this.registerUserWithPhoneNumber));\n        this.router.post('/login_with_facebook', this.route(this.loginWithFacebook));\n        this.router.post('/login_with_google', this.route(this.loginWithGoogle));\n    }\n    loginWithFacebook(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataObtained = yield controllers_1.userController.checkLoginWithFacebook(req.body);\n            if (dataObtained.dataValues) {\n                dataObtained.dataValues.role = \"USER\";\n            }\n            const token = yield services_1.tokenService.getUserToken(dataObtained.id);\n            this.onSuccess(res, dataObtained, { token, isNewUser: dataObtained.isNewUser });\n        });\n    }\n    loginWithGoogle(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataObtained = yield controllers_1.userController.checkLoginWithGoogle(req.body);\n            if (dataObtained.dataValues) {\n                dataObtained.dataValues.role = \"USER\";\n            }\n            const token = yield services_1.tokenService.getUserToken(dataObtained.id);\n            this.onSuccess(res, dataObtained, { token, isNewUser: dataObtained.isNewUser });\n        });\n    }\n    employeeLogin(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataObtained = yield controllers_1.employeeController.checkLogin(req.body);\n            const token = yield services_1.tokenService.getEmployeeToken(dataObtained.id);\n            this.onSuccess(res, dataObtained, { token });\n        });\n    }\n}\nexports.default = AuthRouter;\n//# sourceMappingURL=auth.js.map"]}