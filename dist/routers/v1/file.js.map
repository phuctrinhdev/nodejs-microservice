{"version":3,"sources":["../../../build/routers/v1/file.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","base_1","require","middlewares_1","multer","sharp","probe","fs","express","config_1","IMAGE_URL_SERVER_FOR_PRODUCTION","config","server","host","FILE_IMAGE_PATH","ImageRouter","router","Router","storage","diskStorage","destination","req","file","cb","filename","parts","originalname","split","type","length","fieldname","Date","now","upload","get","route","getImage","post","updateImageMiddlewares","single","updateFile","res","fileUrl","console","log","url","tokenInfo","payload","user_id","undefined","body","file_url","onSuccess","params","exists","readFile","err","data","writeHead","write","end","download","authInfoMiddleware","run","queryMiddleware","blockMiddleware","BaseRouter","default"],"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","file":"file.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"../base\");\nconst middlewares_1 = require(\"@/middlewares\");\nconst multer = require(\"multer\");\nconst sharp = require('sharp');\nconst probe = require('probe-image-size');\nconst fs = require(\"fs\");\nconst express = require(\"express\");\nconst config_1 = require(\"@/config\");\n// const IMAGE_URL_SERVER = `${config.server.protocol}://${config.server.host}:${config.server.port}` + '/api/v1/image/get/'\nconst IMAGE_URL_SERVER_FOR_PRODUCTION = `https://${config_1.config.server.host}:8002` + '/api/v1/file/get/';\nconst FILE_IMAGE_PATH = 'file/';\nclass ImageRouter extends base_1.BaseRouter {\n    constructor() {\n        super();\n        this.router = express.Router();\n        const storage = multer.diskStorage({\n            destination: function (req, file, cb) {\n                cb(null, FILE_IMAGE_PATH);\n            },\n            filename: function (req, file, cb) {\n                const parts = file.originalname.split('.');\n                const type = parts[parts.length - 1];\n                cb(null, file.fieldname + '-' + Date.now() + '.' + type);\n            }\n        });\n        const upload = multer({ storage: storage });\n        this.router.get('/get/:filename', this.route(this.getImage));\n        this.router.post('/upload', this.updateImageMiddlewares(), upload.single(\"file\"), this.route(this.updateFile));\n    }\n    updateFile(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fileUrl = IMAGE_URL_SERVER_FOR_PRODUCTION;\n            const filename = req.file.filename;\n            console.log(\"@#$%^$#\", req.file);\n            const url = fileUrl + filename;\n            if (req.tokenInfo.payload.user_id !== undefined) {\n                req.body.user_id = req.tokenInfo.payload.user_id;\n                req.body.file_url = url;\n            }\n            this.onSuccess(res, { url, filename });\n        });\n    }\n    getImage(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { filename } = req.params;\n            // console.log('!!! about to check file exist');\n            fs.exists(FILE_IMAGE_PATH + filename, function (exists) {\n                // console.log('!!! did check file exist', exists);\n                if (exists) {\n                    fs.readFile(FILE_IMAGE_PATH + filename, function (err, data) {\n                        if (err) {\n                            console.log('!!! error reading file');\n                            res.writeHead(500, { 'Content-Type': 'application/json' });\n                            res.write(`{\n                            \"code\": 500,\n                            \"type\": \"database_exception_query_fail\",\n                            \"message\": \"error reading file\"\n                        }`);\n                            res.end();\n                        }\n                        else {\n                            // console.log('!!! read a file successfully');\n                            // res.writeHead(200, { 'Content-Type': 'image/png' });\n                            // res.end(data);\n                            res.download(FILE_IMAGE_PATH + filename);\n                        }\n                    });\n                }\n                else {\n                    res.writeHead(500, { 'Content-Type': 'application/json' });\n                    res.write(`{\n                    \"code\": 500,\n                    \"type\": \"database_exception_query_fail\",\n                    \"message\": \"file does not exist\"\n                }`);\n                    res.end();\n                }\n            });\n        });\n    }\n    updateImageMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    getListMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    getItemMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    updateMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    deleteMiddlewares() {\n        // return [blockMiddleware.run()]\n        return [];\n    }\n    deleteAllMiddlewares() {\n        return [middlewares_1.blockMiddleware.run()];\n    }\n    createMiddlewares() {\n        return [middlewares_1.blockMiddleware.run()];\n    }\n}\nexports.default = ImageRouter;\n//# sourceMappingURL=file.js.map"]}